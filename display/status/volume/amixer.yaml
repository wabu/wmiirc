#--
# Copyright protects this work.
# See LICENSE file for details.
#++

import:
  - display/status

display:
  status:
    amixer:
      refresh: 60

      script: |
        MIXER = 'Master'

        def get
          `amixer get #{MIXER}`
        end

        def level
          get[/\d+%/]
        end

        def set value
          system "amixer set #{MIXER} #{value}"
          refresh
        end

        def increase
          set '5%+'
        end

        def decrease
          set '5%-'
        end

        def mute!
          set 'toggle'
          if mute?
            @previous = level
            set '0%'
          else
            set @previous || '80%'
          end
        end

        def mute?
          get.include? '[off]'
        end

        def menu
          current = self.level
          levels = (0 .. 10).map {|i| i * 10 }.
                   push(current.to_i).sort.uniq.
                   map {|i| "#{i}%" }.reverse

          if level = click_menu(levels, current)
            set level
          end
        end

      label: |
        color = CONFIG['display']['color']['notice'] if mute?
        [color, 'volume', level]

      mouse_action:
        left_click: set_volume_from_menu
        right_click: mute_volume_toggle
        wheel_up: increase_volume
        wheel_down: decrease_volume

control:
  action:
    set_volume_from_menu: |
      Status['amixer'].menu

    increase_volume: |
      Status['amixer'].increase

    decrease_volume: |
      Status['amixer'].decrease

    mute_volume_toggle: |
      Status['amixer'].mute!

  keyboard_action:
    ${mod}-Shift-Prior: increase_volume
    ${mod}-Shift-Next: decrease_volume
    ${mod}-Shift-Return: mute_volume_toggle
